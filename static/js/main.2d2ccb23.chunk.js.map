{"version":3,"sources":["components/Date/Date.js","components/Loading/Loading.js","components/Weather/WeatherInfo.js","components/chart/Chart.js","components/Weather/WeatherMain.js","App.js","index.js","components/Weather/WeatherMain.module.css","components/Loading/Loading.module.css","components/chart/Chart.module.css","components/Weather/WeatherInfo.module.css"],"names":["DateNow","d","day","getDay","date","getDate","month","getMonth","year","getFullYear","dateBuilder","Date","Loading","className","classes","loading","WeatherInfo","props","rise","sunrise","set","sunset","SunsetDate","SunriseDate","weatherInfo","humi","icon","windSpeed","humidity","pressure","sun","getHours","getMinutes","getSeconds","Chart","useState","forecast","setForecast","setLoading","url","useEffect","fetch","then","res","json","data","console","log","forecastDays","list","newDay","forEach","dateN","dt","push","labels","datasets","label","backgroundColor","borderColor","main","temp_max","temp_min","chart","WeatherApp","query","setQuery","isLoading","weather","setWeather","showMore","setShowMore","showGraph","setShowGraph","fetchWeatherData","container","search_box","type","placeholder","onChange","e","target","value","onKeyPress","key","dateLocation","location","name","sys","country","weatherbox","temp","Math","round","desc","description","highLow","high","low","wind","speed","btn","onClick","graphBtn","city","App","ifConnetcted","window","navigator","onLine","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"0MAsBeA,MApBf,WAaI,OACI,8BAbgB,SAACC,GACjB,IAGIC,EAFO,CAAC,SAAU,SAAU,UAAW,YAAa,WAAY,SAAU,YAE/DD,EAAEE,UACbC,EAAOH,EAAEI,UACTC,EALS,CAAC,UAAW,WAAY,QAAS,QAAS,MAAO,OAAQ,OAAQ,SAAU,YAAa,UAAW,WAAY,YAKzGL,EAAEM,YACjBC,EAAOP,EAAEQ,cAEjB,MAAM,GAAN,OAAUP,EAAV,YAAiBE,EAAjB,YAAyBE,EAAzB,YAAkCE,GAKzBE,CAAY,IAAIC,S,iBCLdC,MATf,WACI,OACI,qBAAKC,UAAWC,IAAQC,QAAxB,SAEI,8C,gDCuBGC,MAtBf,SAAqBC,GAEjB,IAAIC,EAAOD,EAAME,QACbC,EAAMH,EAAMI,OACZC,EAAa,IAAIX,KAAW,IAANS,GACtBG,EAAc,IAAIZ,KAAY,IAAPO,GAC3B,OACI,sBAAKL,UAAWC,IAAQU,YAAxB,UACI,sBAAKX,UAAWC,IAAQW,KAAxB,UACI,qBAAIZ,UAAWC,IAAQY,KAAvB,cAA8B,cAAC,IAAD,IAA9B,iBAAgET,EAAMU,UAAtE,UACA,qBAAId,UAAWC,IAAQY,KAAvB,cAA8B,cAAC,IAAD,IAA9B,eAAwDT,EAAMW,SAA9D,QAA4E,wCAC5E,qBAAIf,UAAWC,IAAQY,KAAvB,cAA8B,cAAC,IAAD,IAA9B,eAA0DT,EAAMY,SAAhE,YAEJ,sBAAKhB,UAAWC,IAAQgB,IAAxB,UACI,qBAAKjB,UAAWC,IAAQY,KAAxB,cAA+B,cAAC,IAAD,IAA/B,wBAA0DH,EAAYQ,WAAtE,cAAsFR,EAAYS,aAAlG,cAAoHT,EAAYU,iBAChI,qBAAIpB,UAAWC,IAAQY,KAAvB,cAA8B,cAAC,IAAD,IAA9B,uBAAwDJ,EAAWS,WAAnE,cAAmFT,EAAWU,aAA9F,cAAgHV,EAAWW,wB,yBCuD5HC,MA1Ef,SAAejB,GACX,MAAgCkB,mBAAS,IAAzC,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,EAA8BF,oBAAS,GAAvC,mBAAOpB,EAAP,KAAgBuB,EAAhB,KAIMC,EAAG,6DAFI,YAEJ,kBADO,oCAchB,GAVAC,qBAAU,WACNC,MAAMF,GACLG,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAG,GACFR,EAAYQ,GACZP,GAAW,GACXQ,QAAQC,IAAIF,QAEjB,CAACN,IAEDxB,EACC,OAAO,yCAIX,IAAMiC,EAAe,CAACZ,EAASa,KAAK,GAAGb,EAASa,KAAK,IAAIb,EAASa,KAAK,IAAIb,EAASa,KAAK,IAAIb,EAASa,KAAK,KACrGC,EAAS,GAEXF,EAAaG,SAAQ,SAAAlD,GACjB,IAAMmD,EAAQ,IAAIzC,KAAY,IAAPV,EAAEoD,IAAWhD,UACpC6C,EAAOI,KAAKF,MAGhBN,QAAQC,IAAIG,GAGZ,IAOEL,EAAO,CACbU,OARmB,CACXL,EAAO,GAAG,UACVA,EAAO,GAAG,UACVA,EAAO,GAAG,UACVA,EAAO,GAAG,UACVA,EAAO,GAAG,WAIlBM,SAAU,CAAC,CACPC,MAAO,OACPC,gBAAiB,oBACjBC,YAAa,oBACbd,KAAM,CACFG,EAAa,GAAGY,KAAKC,SAAW,IAChCb,EAAa,GAAGY,KAAKC,SAAW,IAChCb,EAAa,GAAGY,KAAKC,SAAW,IAChCb,EAAa,GAAGY,KAAKC,SAAW,IAChCb,EAAa,GAAGY,KAAKC,SAAU,MAGrC,CAAEJ,MAAO,MACPE,YAAa,OACbD,gBAAiB,OACjBb,KAAM,CACFG,EAAa,GAAGY,KAAKE,SAAW,IAChCd,EAAa,GAAGY,KAAKE,SAAW,IAChCd,EAAa,GAAGY,KAAKE,SAAW,IAChCd,EAAa,GAAGY,KAAKE,SAAW,IAChCd,EAAa,GAAGY,KAAKE,SAAU,QAGvC,OACI,qBAAKjD,UAAWC,IAAQiD,MAAxB,SACI,cAAC,IAAD,CAAMlB,KAAMA,OCgCTmB,MA/Ff,WACI,MAA0B7B,mBAAS,aAAnC,mBAAO8B,EAAP,KAAcC,EAAd,KACA,EAAgC/B,oBAAS,GAAzC,mBAAOgC,EAAP,KAAkB7B,EAAlB,KACA,EAA8BH,mBAAS,IAAvC,mBAAOiC,EAAP,KAAgBC,EAAhB,KACA,EAAgClC,oBAAS,GAAzC,mBAAOmC,EAAP,KAAiBC,EAAjB,KACA,EAAkCpC,oBAAS,GAA3C,mBAAOqC,EAAP,KAAkBC,EAAlB,KAEMC,EAAmB,WACnBjC,MAAM,qDAAD,OAAsDwB,EAAtD,kBAXG,qCAYHvB,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAG,GACFqB,EAAS,IACTpB,QAAQC,IAAIF,GACZwB,EAAWxB,GACXP,GAAW,OAczB,OAJAE,qBAAU,WACNkC,MACF,IAECP,EACM,cAAC,EAAD,IAaT,qBAAKtD,UAAWC,IAAQ6D,UAAxB,SACI,uBAAM9D,UAAWC,IAAQ8C,KAAzB,UACE,qBAAK/C,UAAWC,IAAQ8D,WAAxB,SACE,uBACAC,KAAK,OACLhE,UAAU,aACViE,YAAY,SACZC,SAAU,SAAAC,GAAC,OAAId,EAASc,EAAEC,OAAOC,QACjCC,WAhCO,SAAAH,GACE,UAAVA,EAAEI,KACDV,SAiCuB,oBAAhBN,EAAQR,KAAwB,gCACvC,oCACA,sBAAK/C,UAAWC,IAAQuE,aAAxB,UACE,sBAAKxE,UAAWC,IAAQwE,SAAxB,UACKlB,EAAQmB,KADb,IACoBnB,EAAQoB,IAAIC,WAEhC,qBAAK5E,UAAWC,IAAQV,KAAxB,SACI,cAAC,EAAD,SAGN,sBAAKS,UAAWC,IAAQ4E,WAAxB,UACM,sBAAK7E,UAAWC,IAAQ6E,KAAxB,UACKC,KAAKC,MAAMzB,EAAQR,KAAK+B,KAAO,QADpC,WAGA,sBAAK9E,UAAWC,IAAQgF,KAAxB,UACI,6BAAK1B,EAAQA,QAAQ,GAAGR,OACxB,4BAAIQ,EAAQA,QAAQ,GAAG2B,uBAIjC,sBAAKlF,UAAWC,IAAQkF,QAAxB,UACM,sBAAKnF,UAAWC,IAAQmF,KAAxB,6BAA+CL,KAAKC,MAAMzB,EAAQR,KAAKC,SAAW,QAAlF,WACA,sBAAKhD,UAAWC,IAAQoF,IAAxB,4BAA6CN,KAAKC,MAAMzB,EAAQR,KAAKE,SAAW,QAAhF,cAELQ,EAAW,cAAC,EAAD,CACJ3C,UAAWyC,EAAQ+B,KAAKC,MACxBvE,SAAUuC,EAAQR,KAAK/B,SACvBV,QAASiD,EAAQoB,IAAIrE,QACrBE,OAAQ+C,EAAQoB,IAAInE,OACpBO,SAAUwC,EAAQR,KAAKhC,WAC1B,QACE,GACX,sBAAKf,UAAWC,IAAQuF,IAAxB,UACE,wBAAQC,QAtDQ,WACnB/B,GAAaD,IAqDV,SAAkCA,EAAW,eAAiB,iBAC9D,wBAAQzD,UAAWC,IAAQyF,SAAUD,QAnDrB,WACnB7B,GAAcD,IAkDX,SAAgEA,EAAY,aAAe,kBAE5FA,EAAY,cAAC,EAAD,CAAOgC,KAAMvC,IAAW,WCpF9BwC,MAZf,WAEE,IAAMC,EAAeC,OAAOC,UAAUC,OAGtC,OAAQ,qCACF,qBAAKhG,UAAW6F,EAAe,UAAY,gBAC/C,cAAC,EAAD,QCJJI,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U,kBCT1BC,EAAOC,QAAU,CAAC,UAAY,+BAA+B,KAAO,0BAA0B,WAAa,gCAAgC,WAAa,gCAAgC,SAAW,8BAA8B,KAAO,0BAA0B,KAAO,0BAA0B,KAAO,0BAA0B,QAAU,6BAA6B,QAAU,6BAA6B,KAAO,0BAA0B,IAAM,yBAAyB,MAAQ,2BAA2B,IAAM,yBAAyB,SAAW,gC,mBCA/hBD,EAAOC,QAAU,CAAC,QAAU,2B,mBCA5BD,EAAOC,QAAU,CAAC,MAAQ,uB,4DCA1BD,EAAOC,QAAU,CAAC,YAAc,iCAAiC,KAAO,6B","file":"static/js/main.2d2ccb23.chunk.js","sourcesContent":["import React from 'react'\n\nfunction DateNow() {\n    const dateBuilder = (d) => {\n        let months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n        let days = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"];\n\n        let day = days[d.getDay()];\n        let date = d.getDate();\n        let month = months[d.getMonth()];\n        let year = d.getFullYear();\n\n    return `${day} ${date} ${month} ${year}`\n  }\n\n    return (\n        <div>\n            {dateBuilder(new Date())}\n        </div>\n    )\n}\n\nexport default DateNow;\n","import React from 'react';\nimport classes from \"./Loading.module.css\";\n\nfunction Loading() {\n    return (\n        <div className={classes.loading}>\n            {/* <img src={Spinner} alt=\"loading\"/> */}\n            <h1>Loading..</h1>\n        </div>\n    )\n}\n\nexport default Loading\n","import React from 'react';\nimport classes from \"./WeatherInfo.module.css\";\nimport { FiSunrise,FiSunset } from 'react-icons/fi'\nimport {WiHumidity} from \"react-icons/wi\"\nimport {GiPaperWindmill} from \"react-icons/gi\";\nimport {CgCompressV} from \"react-icons/cg\";\n\n\nfunction WeatherInfo(props) {\n    //converting seconds into date\n    let rise = props.sunrise;\n    let set = props.sunset;\n    let SunsetDate = new Date(set * 1000)\n    let SunriseDate = new Date(rise * 1000)\n    return (\n        <div className={classes.weatherInfo}>\n            <div className={classes.humi}>\n                <li className={classes.icon}> <GiPaperWindmill /> Wind Speed : {props.windSpeed} m/s</li>\n                <li className={classes.icon}> <WiHumidity/> Humidity : {props.humidity} g.kg<sup>-1</sup></li>\n                <li className={classes.icon}> <CgCompressV /> Pressure : {props.pressure} Pa</li>\n            </div>\n            <div className={classes.sun}>\n                <li  className={classes.icon}> <FiSunrise/> Sunrise : {`${SunriseDate.getHours()} : ${SunriseDate.getMinutes()} : ${SunriseDate.getSeconds()}`}</li>\n                <li className={classes.icon}> <FiSunset /> Sunset : {`${SunsetDate.getHours()} : ${SunsetDate.getMinutes()} : ${SunsetDate.getSeconds()}`}</li>\n            </div>\n\n        </div>\n    )\n}\n\nexport default WeatherInfo;\n","import React,{useState,useEffect} from 'react';\nimport classes from \"./Chart.module.css\"\nimport {Line} from \"react-chartjs-2\";\n\nfunction Chart(props) {\n    const [forecast, setForecast] = useState({})\n    const [loading, setLoading] = useState(true)\n\n    const city = \"bangalore\";\n    const API_KEY = \"f32cfa0133a992d042027732e48eae99\"\n    const url = `https://api.openweathermap.org/data/2.5/forecast?q=${city}&appid=${API_KEY}`\n\n\n    useEffect(() => {\n        fetch(url)\n        .then(res => res.json())\n        .then(data => {\n            setForecast(data)\n            setLoading(false)\n            console.log(data)\n        })\n    }, [url])\n\n    if(loading){\n        return <h1>Loading</h1>\n    }\n\n\n    const forecastDays = [forecast.list[0],forecast.list[10],forecast.list[20],forecast.list[30],forecast.list[39]]\n    const newDay = []\n\n        forecastDays.forEach(d => {\n            const dateN = new Date(d.dt * 1000).getDate();\n            newDay.push(dateN)\n        })\n\n        console.log(newDay);\n       \n        \n        const labels = [\n            newDay[0]+\" / 2021\",\n            newDay[1]+\" / 2021\" ,\n            newDay[2]+\" / 2021\",\n            newDay[3]+\" / 2021\",\n            newDay[4]+\" / 2021\",\n        ];\n    const data = {\n    labels: labels,\n    datasets: [{\n        label: 'High',\n        backgroundColor: 'rgb(255, 99, 132)',\n        borderColor: 'rgb(255, 99, 132)',\n        data: [  \n            forecastDays[0].main.temp_max - 273,\n            forecastDays[1].main.temp_max - 273, \n            forecastDays[2].main.temp_max - 273, \n            forecastDays[3].main.temp_max - 273, \n            forecastDays[4].main.temp_max- 273\n             ],\n        \n    },{ label: \"Low\",\n        borderColor: \"#aba\",\n        backgroundColor: \"#123\",\n        data: [\n            forecastDays[0].main.temp_min - 273,\n            forecastDays[1].main.temp_min - 273, \n            forecastDays[2].main.temp_min - 273, \n            forecastDays[3].main.temp_min - 273, \n            forecastDays[4].main.temp_min- 273]}]\n    };\n\n    return (\n        <div className={classes.chart}>\n            <Line data={data}/>\n        </div>\n    )\n}\n\nexport default Chart\n","import React,{useState,useEffect} from 'react'\nimport classes from \"./WeatherMain.module.css\"\nimport DateNow from \"../Date/Date\";\nimport Loading from '../Loading/Loading';\nimport MoreInfo from \"./WeatherInfo\"\nimport Chart from '../chart/Chart';\n\n  const API_KEY = \"d2ca3fc4dd7727dde12d2573b53a9aca\"\n  // const API_KEY = \"f32cfa0133a992d042027732e48eae99\";\n\nfunction WeatherApp() {\n    const [query, setQuery] = useState(\"bangalore\");\n    const [isLoading, setLoading] = useState(false);\n    const [weather, setWeather] = useState({});\n    const [showMore, setShowMore] = useState(false);\n    const [showGraph, setShowGraph] = useState(false);\n\n    const fetchWeatherData = () => {\n          fetch(`https://api.openweathermap.org/data/2.5/weather?q=${query}&appid=${API_KEY}`)\n              .then(res => res.json())\n              .then(data => {\n                  setQuery('');\n                  console.log(data);\n                  setWeather(data);\n                  setLoading(false);\n              });\n    }\n\n    const search = e => {\n        if(e.key === \"Enter\") {\n            fetchWeatherData()\n        }\n    }\n\n    useEffect(() => {\n        fetchWeatherData()\n    },[])\n\n    if(isLoading){\n      return <Loading/>\n    }\n\n   const handleShowMore = () => {\n       setShowMore(!showMore)\n   }\n\n  const handleShowGraph = () => {\n       setShowGraph(!showGraph)\n  }\n  \n\n    return (\n    <div className={classes.container}>\n        <main className={classes.main}>\n          <div className={classes.search_box}>\n            <input \n            type=\"text\" \n            className=\"search-bar\" \n            placeholder=\"search\" \n            onChange={e => setQuery(e.target.value)}\n            onKeyPress={search}\n            /> \n          </div>\n          {(typeof weather.main != \"undefined\") ? (<div>\n            <article>\n            <div className={classes.dateLocation}>\n              <div className={classes.location}>\n                  {weather.name},{weather.sys.country}\n              </div>\n              <div className={classes.date}>\n                  <DateNow/>\n              </div>\n            </div>\n            <div className={classes.weatherbox}>\n                  <div className={classes.temp}>\n                      {Math.round(weather.main.temp - 273.15)}°c\n                  </div>\n                  <div className={classes.desc}>\n                      <h5>{weather.weather[0].main}</h5>\n                      <p>{weather.weather[0].description}</p>\n                  </div>\n            </div>\n            </article>\n            <div className={classes.highLow}>\n                  <div className={classes.high}>Todays's High : {Math.round(weather.main.temp_max - 273.15)}°c</div>\n                  <div className={classes.low}>Todays's Low : {Math.round(weather.main.temp_min - 273.15)}°c</div>\n              </div>\n            {showMore ? <MoreInfo \n                    windSpeed={weather.wind.speed} \n                    pressure={weather.main.pressure} \n                    sunrise={weather.sys.sunrise} \n                    sunset={weather.sys.sunset}\n                    humidity={weather.main.humidity}\n            /> : null}\n        </div>) : ('')}\n        <div className={classes.btn}>\n          <button onClick={handleShowMore}>{showMore ? \"Hide Details\" : \"Show Details\"}</button>\n          <button className={classes.graphBtn} onClick={handleShowGraph}>{showGraph ? \"Hide Graph\" : \"Show Graph\"}</button>\n        </div>\n        {showGraph ? <Chart city={query}/> : null}\n        </main>\n    </div>\n    )\n}\n\nexport default WeatherApp\n","import \"./App.css\";\nimport WeatherApp from \"./components/Weather/WeatherMain\";\n\nfunction App() {\n\n  const ifConnetcted = window.navigator.onLine;\n\n\n  return (<>\n        <div className={ifConnetcted ? \"connect\" : \"notConneted\"}></div>\n    <WeatherApp />\n  </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"WeatherMain_container__2YqWR\",\"main\":\"WeatherMain_main__31JY9\",\"search_box\":\"WeatherMain_search_box__1Llc8\",\"weatherbox\":\"WeatherMain_weatherbox__CKEkl\",\"location\":\"WeatherMain_location__JnmbI\",\"date\":\"WeatherMain_date__2GUlf\",\"temp\":\"WeatherMain_temp__1HROO\",\"desc\":\"WeatherMain_desc__UDA4I\",\"weather\":\"WeatherMain_weather__15SGs\",\"highLow\":\"WeatherMain_highLow__1jJs4\",\"high\":\"WeatherMain_high__yAXKd\",\"low\":\"WeatherMain_low__1KR56\",\"cloud\":\"WeatherMain_cloud__1Tw6X\",\"btn\":\"WeatherMain_btn__1MXva\",\"graphBtn\":\"WeatherMain_graphBtn__nm8Ru\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loading\":\"Loading_loading__YZjl9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"chart\":\"Chart_chart__3zOFn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"weatherInfo\":\"WeatherInfo_weatherInfo__2YiCk\",\"icon\":\"WeatherInfo_icon__3bMoI\"};"],"sourceRoot":""}